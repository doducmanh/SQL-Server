USE [DP_Manh]
GO

/****** Object:  StoredProcedure [dbo].[AD_BONUS_ZDSZD_MTHLY]    Script Date: 30/01/2023 11:30:16 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




ALTER PROCEDURE [dbo].[AD_BONUS_ZDSZD_MTHLY] (@varREPORT_MONTH nvarchar(4000)) 
AS 
BEGIN
--@varREPORT_MONTH format 'yyyy-MM-01'
WITH 
----PREPARE DATA
BONUS_PROBA AS (
	SELECT 
		[AD_Code], 
		[ADName], 
		[AD_Grade], 
		[Appointed_Date],
		[iDATE_APPOINTED],
		[iDATE_TARGET],
		[TGT_PROBA],
		[SUM_FYPincTopup_PROBA],
		[SUM_FYP_COUNT_BONUS_PROBA],
		[FYP_OVER_PROBA],
		[FYP_OVER_PROBA_DIV2],
		NO_OF_MTH_ADD,
		MTH_ADD_PROBA_BONUS
	FROM   
	   (SELECT * 
	   FROM [dbo].[T_AD_BONUS_PROBATION]) p  
	UNPIVOT  
	   (MTH_ADD_PROBA_BONUS FOR NO_OF_MTH_ADD IN   
		  ([MTH_ADDTO_1], [MTH_ADDTO_2])  
	)AS unpvt
)
, AD_STRUCTURE AS (
	SELECT 
		AD_STRUCTURE2.[TERRITORY],
		AD_STRUCTURE1.*
	FROM (SELECT *
		  FROM [SQL_SV65].[PowerBI].[DPO].[Main_AD_STRUCTURE_FULL]
		  WHERE [ExplodedDate]  = @varREPORT_MONTH) AS AD_STRUCTURE1
	LEFT JOIN [dbo].[T_Main_TERRITORIES] AS AD_STRUCTURE2
	ON AD_STRUCTURE1.[Territory_Code] = AD_STRUCTURE2.[CODE]
)
, AD_TARGET_FYP AS (
	SELECT [AD Code], [AD Name], unpvt.[Grade], YearTarget, CAST(MonthTarget AS INT) AS MonthTarget, TargetFYP
	FROM   (SELECT [AD Code], [AD Name], [Grade], [Year]  AS YearTarget
	, IIF([1] IS NULL, 0, [1]) AS [1]
	, IIF([2] IS NULL, 0, [2]) AS [2]
	, IIF([3] IS NULL, 0, [3]) AS [3]
	, IIF([4] IS NULL, 0, [4]) AS [4]
	, IIF([5] IS NULL, 0, [5]) AS [5]
	, IIF([6] IS NULL, 0, [6]) AS [6]
	, IIF([7] IS NULL, 0, [7]) AS [7]
	, IIF([8] IS NULL, 0, [8]) AS [8]
	, IIF([9] IS NULL, 0, [9]) AS [9]
	, IIF([10] IS NULL, 0, [10]) AS [10]
	, IIF([11] IS NULL, 0, [11]) AS [11]
	, IIF([12] IS NULL, 0, [12]) AS [12]
			FROM [SQL_SV64].[PowerBI].[DPO].[DP_AD_TARGET]
		) p UNPIVOT (TargetFYP FOR MonthTarget IN ([1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12])) AS unpvt
)

, AD_TARGET_AA AS (
	SELECT [AD Code], [AD Name], unpvt.[Grade], [Target_Date], YearTarget, CAST(MonthTarget AS INT) AS MonthTarget, TargetAA
	FROM   (SELECT [AD Code], [AD Name], [Grade], [Target_Date], [Year]  AS YearTarget
	, IIF([1] IS NULL, 0, [1]) AS [1]
	, IIF([2] IS NULL, 0, [2]) AS [2]
	, IIF([3] IS NULL, 0, [3]) AS [3]
	, IIF([4] IS NULL, 0, [4]) AS [4]
	, IIF([5] IS NULL, 0, [5]) AS [5]
	, IIF([6] IS NULL, 0, [6]) AS [6]
	, IIF([7] IS NULL, 0, [7]) AS [7]
	, IIF([8] IS NULL, 0, [8]) AS [8]
	, IIF([9] IS NULL, 0, [9]) AS [9]
	, IIF([10] IS NULL, 0, [10]) AS [10]
	, IIF([11] IS NULL, 0, [11]) AS [11]
	, IIF([12] IS NULL, 0, [12]) AS [12]
			FROM [SQL_SV64].[PowerBI].[DPO].[DP_AD_TARGET_AA]
		) p UNPIVOT (TargetAA FOR MonthTarget IN ([1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12])) AS unpvt
)
, DETAIL_FYP AS (
	SELECT *
	FROM [DP_Manh].[dbo].[T_AD_BONUS_DETAIL_FYP]
)
, DETAIL_AA AS (
	SELECT *
	FROM [DP_Manh].[dbo].[T_AD_BONUS_DETAIL_AA]
) 
, AD_GIOITHIEU AS (
	SELECT
		*
	FROM [dbo].[T_AD_PROMOTE_GIOITHIEU]
)
----PROCESSING
--------TARGET FYP
, A0 AS (
	SELECT
		[AD Code],
		(TargetFYP * 1000000) AS TargetFYP
	FROM AD_TARGET_FYP
	WHERE YearTarget = YEAR(@varREPORT_MONTH) AND MonthTarget = MONTH(@varREPORT_MONTH)
)
--------FYP
, A1 AS (
	SELECT
		ZD AS AD_CODE_FINAL,
		SUM([FYP_COUNT_BONUS]) AS SUM_FYP_COUNT_BONUS
	FROM DETAIL_FYP
	WHERE ZD IS NOT NULL
	AND  REPORT_MONTH = FORMAT(CAST(@varREPORT_MONTH AS date), 'yyyyMM') 
	GROUP BY ZD
	UNION
	SELECT
		SZD AS AD_CODE_FINAL,
		SUM([FYP_COUNT_BONUS]) AS SUM_FYP_COUNT_BONUS
	FROM DETAIL_FYP
	WHERE SZD IS NOT NULL
	AND  REPORT_MONTH = FORMAT(CAST(@varREPORT_MONTH AS date), 'yyyyMM') 
	GROUP BY SZD
	UNION
	SELECT
		RAD AS AD_CODE_FINAL,
		SUM([FYP_COUNT_BONUS]) AS SUM_FYP_COUNT_BONUS
	FROM DETAIL_FYP
	WHERE RAD IS NOT NULL
	AND  REPORT_MONTH = FORMAT(CAST(@varREPORT_MONTH AS date), 'yyyyMM') 
	GROUP BY RAD
	UNION
	SELECT
		RD AS AD_CODE_FINAL,
		SUM([FYP_COUNT_BONUS]) AS SUM_FYP_COUNT_BONUS
	FROM DETAIL_FYP
	WHERE RD IS NOT NULL
	AND  REPORT_MONTH = FORMAT(CAST(@varREPORT_MONTH AS date), 'yyyyMM') 
	GROUP BY RD
	UNION
	SELECT
		SRD AS AD_CODE_FINAL,
		SUM([FYP_COUNT_BONUS]) AS SUM_FYP_COUNT_BONUS
	FROM DETAIL_FYP
	WHERE SRD IS NOT NULL
	AND  REPORT_MONTH = FORMAT(CAST(@varREPORT_MONTH AS date), 'yyyyMM') 
	GROUP BY SRD
	UNION
	SELECT
		TAD AS AD_CODE_FINAL,
		SUM([FYP_COUNT_BONUS]) AS SUM_FYP_COUNT_BONUS
	FROM DETAIL_FYP
	WHERE TAD IS NOT NULL
	AND  REPORT_MONTH = FORMAT(CAST(@varREPORT_MONTH AS date), 'yyyyMM') 
	GROUP BY TAD
	UNION
	SELECT
		TD AS AD_CODE_FINAL,
		SUM([FYP_COUNT_BONUS]) AS SUM_FYP_COUNT_BONUS
	FROM DETAIL_FYP
	WHERE TD IS NOT NULL
	AND  REPORT_MONTH = FORMAT(CAST(@varREPORT_MONTH AS date), 'yyyyMM') 
	GROUP BY TD
)

, A2 AS (
	SELECT
		AD_CODE_FINAL,
		SUM(SUM_FYP_COUNT_BONUS) AS SUM_FYP_COUNT_BONUS
	FROM A1
	GROUP BY AD_CODE_FINAL
)
--------ADD FYP PROBA
, A3 AS (
	SELECT
		[AD_Code] AS [AD_Code1],
		[FYP_OVER_PROBA_DIV2]
	FROM BONUS_PROBA
	WHERE MTH_ADD_PROBA_BONUS = @varREPORT_MONTH
)
--------TARGET AA
, B0 AS (
	SELECT
		[AD Code],
		[Target_Date],
		TargetAA
	FROM AD_TARGET_AA
	WHERE YearTarget = YEAR(@varREPORT_MONTH) AND MonthTarget = MONTH(@varREPORT_MONTH)
)
--------AA
, B1 AS (
	SELECT
		ZD AS AD_CODE_FINAL,
		SUM([AA]) AS SUM_AA
	FROM DETAIL_AA
	WHERE ZD IS NOT NULL
	AND  REPORT_MONTH = FORMAT(CAST(@varREPORT_MONTH AS date), 'yyyyMM') 
	GROUP BY ZD
	UNION
	SELECT
		SZD AS AD_CODE_FINAL,
		SUM([AA]) AS SUM_AA
	FROM DETAIL_AA
	WHERE SZD IS NOT NULL
	AND  REPORT_MONTH = FORMAT(CAST(@varREPORT_MONTH AS date), 'yyyyMM') 
	GROUP BY SZD
	UNION
	SELECT
		RAD AS AD_CODE_FINAL,
		SUM([AA]) AS SUM_AA
	FROM DETAIL_AA
	WHERE RAD IS NOT NULL
	AND  REPORT_MONTH = FORMAT(CAST(@varREPORT_MONTH AS date), 'yyyyMM') 
	GROUP BY RAD
	UNION
	SELECT
		RD AS AD_CODE_FINAL,
		SUM([AA]) AS SUM_AA
	FROM DETAIL_AA
	WHERE RD IS NOT NULL
	AND  REPORT_MONTH = FORMAT(CAST(@varREPORT_MONTH AS date), 'yyyyMM') 
	GROUP BY RD
	UNION
	SELECT
		SRD AS AD_CODE_FINAL,
		SUM([AA]) AS SUM_AA
	FROM DETAIL_AA
	WHERE SRD IS NOT NULL
	AND  REPORT_MONTH = FORMAT(CAST(@varREPORT_MONTH AS date), 'yyyyMM') 
	GROUP BY SRD
	UNION
	SELECT
		TAD AS AD_CODE_FINAL,
		SUM([AA]) AS SUM_AA
	FROM DETAIL_AA
	WHERE TAD IS NOT NULL
	AND  REPORT_MONTH = FORMAT(CAST(@varREPORT_MONTH AS date), 'yyyyMM') 
	GROUP BY TAD
	UNION
	SELECT
		TD AS AD_CODE_FINAL,
		SUM([AA]) AS SUM_AA
	FROM DETAIL_AA
	WHERE TD IS NOT NULL
	AND  REPORT_MONTH = FORMAT(CAST(@varREPORT_MONTH AS date), 'yyyyMM') 
	GROUP BY TD
)

, B2 AS (
	SELECT
		AD_CODE_FINAL,
		SUM(SUM_AA) AS SUM_AA
	FROM B1
	GROUP BY AD_CODE_FINAL
)
----COMBINE
, C0 AS (
	SELECT
		AD_STRUCTURE.[TERRITORY],
		AD_STRUCTURE.[TDName],
		AD_STRUCTURE.[TADName],
		AD_STRUCTURE.[SRDName],
		AD_STRUCTURE.[RDName],
		AD_STRUCTURE.[RADName],
		AD_STRUCTURE.[SZDName],
		AD_STRUCTURE.[ZDName],
		AD_STRUCTURE.[ADName],
		AD_STRUCTURE.[AD_Grade],
		AD_STRUCTURE.[Appointed_Date],
		IIF(A0.TargetFYP IS NULL, 0, A0.TargetFYP) AS TargetFYP,
		IIF(A2.SUM_FYP_COUNT_BONUS IS NULL, 0, A2.SUM_FYP_COUNT_BONUS) AS SUM_FYP_COUNT_BONUS,
		IIF(A3.FYP_OVER_PROBA_DIV2 IS NULL, 0, A3.FYP_OVER_PROBA_DIV2) AS FYP_OVER_PROBA_DIV2,
		B0.[Target_Date] AS [Target_Date_AA],
		IIF(B0.TargetAA IS NULL, 0, B0.TargetAA) AS TargetAA,
		B2.SUM_AA,
		AD_STRUCTURE.[TD],
		AD_STRUCTURE.[TAD],
		AD_STRUCTURE.[SRD],
		AD_STRUCTURE.[RD],
		AD_STRUCTURE.[RAD],
		AD_STRUCTURE.[SZD],
		AD_STRUCTURE.[ZD],
		AD_STRUCTURE.[AD_Code]
	FROM AD_STRUCTURE LEFT JOIN A0 ON AD_STRUCTURE.[AD_Code] = A0.[AD Code]
	LEFT JOIN A2 ON AD_STRUCTURE.[AD_Code] = A2.AD_CODE_FINAL
	LEFT JOIN A3 ON AD_STRUCTURE.[AD_Code] = A3.AD_Code1
	LEFT JOIN B0 ON AD_STRUCTURE.[AD_Code] = B0.[AD Code]
	LEFT JOIN B2 ON AD_STRUCTURE.[AD_Code] = B2.AD_CODE_FINAL
	WHERE AD_STRUCTURE.[AD_Grade] IN ('ZD', 'SZD')
	AND (AD_STRUCTURE.[Terminated_Date] IS NULL OR AD_STRUCTURE.[Terminated_Date] >= @varREPORT_MONTH)
	AND AD_STRUCTURE.[Appointed_Date] <= EOMONTH(@varREPORT_MONTH)
)
, C1 AS (
	SELECT
		[TERRITORY],
		[TDName],
		[TADName],
		[SRDName],
		[RDName],
		[RADName],
		[SZDName],
		[ZDName],
		[AD_Code],
		[ADName],
		[AD_Grade],
		[Appointed_Date],
		TargetFYP,
		SUM_FYP_COUNT_BONUS,
		FYP_OVER_PROBA_DIV2,
		(SUM_FYP_COUNT_BONUS + FYP_OVER_PROBA_DIV2) AS TOTAL_FYP,
		((SUM_FYP_COUNT_BONUS + FYP_OVER_PROBA_DIV2) / NULLIF(TargetFYP, 0)) AS PERCENT_ACHIEVE_TGT_FYP,
		CASE
			WHEN ((SUM_FYP_COUNT_BONUS + FYP_OVER_PROBA_DIV2) / NULLIF(TargetFYP, 0)) >= 2 THEN 0.08
			WHEN ((SUM_FYP_COUNT_BONUS + FYP_OVER_PROBA_DIV2) / NULLIF(TargetFYP, 0)) >= 1.5 THEN 0.045
			WHEN ((SUM_FYP_COUNT_BONUS + FYP_OVER_PROBA_DIV2) / NULLIF(TargetFYP, 0)) >= 1 THEN 0.03
			WHEN ((SUM_FYP_COUNT_BONUS + FYP_OVER_PROBA_DIV2) / NULLIF(TargetFYP, 0)) >= 0.85 THEN 0.015
			ELSE 0
		END AS BONUS_FYP_RATIO,
		TargetAA,
		SUM_AA,
		(SUM_AA / NULLIF(TargetAA, 0)) AS PERCENT_ACHIEVE_TGT_AA,
		CASE
			WHEN (SUM_AA / NULLIF(TargetAA, 0)) >= 1 AND DATEDIFF(month, [Target_Date_AA], DATEADD(month, 1, @varREPORT_MONTH)) >= 10 THEN 0.02
			WHEN (SUM_AA / NULLIF(TargetAA, 0)) >= 1 AND DATEDIFF(month, [Target_Date_AA], DATEADD(month, 1, @varREPORT_MONTH)) >= 7 THEN 0.015
			WHEN (SUM_AA / NULLIF(TargetAA, 0)) >= 1 AND DATEDIFF(month, [Target_Date_AA], DATEADD(month, 1, @varREPORT_MONTH)) >= 4 THEN 0.01
			WHEN (SUM_AA / NULLIF(TargetAA, 0)) >= 1 AND DATEDIFF(month, [Target_Date_AA], DATEADD(month, 1, @varREPORT_MONTH)) >= 1 THEN 0.005
			ELSE 0
		END AS BONUS_AA_RATIO,
		[TD],
		[TAD],
		[SRD],
		[RD],
		[RAD],
		[SZD],
		[ZD]
	FROM C0
)
, C2 AS (
	SELECT
		[TERRITORY],
		[TDName],
		[TADName],
		[SRDName],
		[RDName],
		[RADName],
		[SZDName],
		[ZDName],
		[AD_Code],
		[ADName],
		[AD_Grade],
		[Appointed_Date],
		TargetFYP,
		SUM_FYP_COUNT_BONUS,
		FYP_OVER_PROBA_DIV2,
		TOTAL_FYP,
		ROUND(PERCENT_ACHIEVE_TGT_FYP, 4) AS PERCENT_ACHIEVE_TGT_FYP,
		BONUS_FYP_RATIO,
		(TOTAL_FYP * BONUS_FYP_RATIO) AS BONUS_FYP,
		TargetAA,
		SUM_AA,
		ROUND(PERCENT_ACHIEVE_TGT_AA, 4) AS PERCENT_ACHIEVE_TGT_AA,
		BONUS_AA_RATIO,
		(TOTAL_FYP * BONUS_AA_RATIO) AS BONUS_AA,
		[TD],
		[TAD],
		[SRD],
		[RD],
		[RAD],
		[SZD],
		[ZD],
		FORMAT(CAST(@varREPORT_MONTH AS date), 'yyyyMM') AS REPORT_MONTH
	FROM C1
)
, C3 AS (
	SELECT *
	FROM C2
	WHERE [TERRITORY] IS NOT NULL
)
--THƯỞNG GIỚI THIỆU DÀNH CHO SZD
----DS SZD ĐỦ ĐIỀU KIỆN
, D AS (
	SELECT
		[AD_Code],
		[ADName],
		[AD_Grade],
		[TargetFYP],
		[TOTAL_FYP],
		[PERCENT_ACHIEVE_TGT_FYP]
	FROM C3
	WHERE [AD_Grade] = 'SZD' AND [PERCENT_ACHIEVE_TGT_FYP] >= 0.75
)
, D1 AS (
	SELECT
		[AD_CODE_NGT],
		[AD_CODE_NGUOIDCTUYEN]
	FROM AD_GIOITHIEU AS D11 JOIN D AS D12
	ON D11.AD_CODE_NGT = D12.AD_Code
)
----FYP BONUS NGUOI DC GIOI THIEU
, E AS (
	SELECT
		E01.[AD_CODE_NGT],
		E01.[AD_CODE_NGUOIDCTUYEN],
		E02.[AD_Grade] AS VITRI_NGUOIDCTUYEN_CURRENT,
		IIF(E02.[BONUS_FYP] IS NULL, 0, E02.[BONUS_FYP]) AS BONUS_FYP_NGUOIDCTUYEN
	FROM D1 AS E01 LEFT JOIN C3 AS E02
	ON E01.AD_CODE_NGUOIDCTUYEN = E02.AD_Code
	WHERE E02.[AD_Grade] = 'ZD'
)
, E1 AS (
	SELECT
		[AD_CODE_NGT],
		[AD_CODE_NGUOIDCTUYEN],
		VITRI_NGUOIDCTUYEN_CURRENT,
		BONUS_FYP_NGUOIDCTUYEN,
		(BONUS_FYP_NGUOIDCTUYEN / 2) AS BONUS_FYP_NGUOIDCTUYEN_50PERCENT
	FROM E
)
----THƯỞNG GIỚI THIỆU CHO SZD
,E2 AS (
	SELECT
		[AD_CODE_NGT],
		SUM(BONUS_FYP_NGUOIDCTUYEN_50PERCENT) AS SZD_INTRODUCTION_BONUS
	FROM E1
	GROUP BY [AD_CODE_NGT]
)
----FINAL
--, F AS (
	SELECT
		[TERRITORY],
		[TDName],
		[TADName],
		[SRDName],
		[RDName],
		[RADName],
		[SZDName],
		[ZDName],
		[AD_Code],
		[ADName],
		[AD_Grade],
		[Appointed_Date],
		TargetFYP,
		SUM_FYP_COUNT_BONUS,
		FYP_OVER_PROBA_DIV2,
		TOTAL_FYP,
		PERCENT_ACHIEVE_TGT_FYP,
		BONUS_FYP_RATIO,
		BONUS_FYP,
		IIF(SZD_INTRODUCTION_BONUS IS NULL, 0, SZD_INTRODUCTION_BONUS) AS SZD_INTRODUCTION_BONUS,
		TargetAA,
		SUM_AA,
		PERCENT_ACHIEVE_TGT_AA,
		BONUS_AA_RATIO,
		BONUS_AA,
		[TD],
		[TAD],
		[SRD],
		[RD],
		[RAD],
		[SZD],
		[ZD],
		REPORT_MONTH
	FROM C3 AS F01 LEFT JOIN E2 AS F02
	ON F01.[AD_Code] = F02.AD_CODE_NGT
--)
END;
GO


