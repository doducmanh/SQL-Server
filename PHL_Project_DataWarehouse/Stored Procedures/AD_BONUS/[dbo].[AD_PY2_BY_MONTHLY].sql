USE [DP_Manh]
GO

/****** Object:  StoredProcedure [dbo].[AD_PY2_BY_MONTHLY]    Script Date: 03/02/2023 10:52:27 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



ALTER PROCEDURE [dbo].[AD_PY2_BY_MONTHLY] (@varREPORT_MONTH nvarchar(4000)) 
AS 
BEGIN
WITH
---PREPARING DATA
AGENT_INFO_CUTOFF AS (
	SELECT *
	FROM [dbo].[T_Main_AGENT_INFO_DA_CUTOFF]
	WHERE [CUTOFF] = FORMAT(EOMONTH(@varREPORT_MONTH), 'yyyyMMdd')
)
, AD_STRUCTURE AS (
	SELECT 
		AD_STRUCTURE2.[TERRITORY],
		AD_STRUCTURE1.*
	FROM (SELECT *
		  FROM [SQL_SV65].[PowerBI].[DPO].[Main_AD_STRUCTURE_FULL]
		  WHERE [ExplodedDate]  = @varREPORT_MONTH) AS AD_STRUCTURE1
	LEFT JOIN [dbo].[T_Main_TERRITORIES] AS AD_STRUCTURE2
	ON AD_STRUCTURE1.[Territory_Code] = AD_STRUCTURE2.[CODE]
)
, PY2_CUTOFF AS (
	SELECT *
	FROM [dbo].[T_DP_K2_CUTOFF]
	WHERE [CUTOFF] = FORMAT(EOMONTH(@varREPORT_MONTH), 'yyyyMMdd')
)
----TINH PY2
, C AS (
	SELECT
		[AGENT NO],
		SUM([Y2 ACTUAL PREM]) AS Y2_ACTUAL_PREM,
		SUM([Y2 EXPECTED PREM]) AS Y2_EXPECTED_PREM
	FROM PY2_CUTOFF
	GROUP BY [AGENT NO]
)
, C1 AS (
	SELECT
		C12.Sales_Unit_Code,
		C11.[AGENT NO],
		C11.Y2_ACTUAL_PREM,
		C11.Y2_EXPECTED_PREM
	FROM C AS C11 LEFT JOIN AGENT_INFO_CUTOFF AS C12
	ON C11.[AGENT NO] = C12.Agent_Number
	WHERE C12.SFC <> 'S'
)
, C2 AS (
	SELECT
		Sales_Unit_Code,
		SUM(Y2_ACTUAL_PREM) AS SUM_Y2_ACTUAL_PREM,
		SUM(Y2_EXPECTED_PREM) AS SUM_Y2_EXPECTED_PREM
	FROM C1
	GROUP BY Sales_Unit_Code
)----NOI KET QUA VAO AD STRUCTURE
, E AS (
	SELECT
		E1.*,
		E3.SUM_Y2_ACTUAL_PREM,
		E3.SUM_Y2_EXPECTED_PREM
	FROM AD_STRUCTURE AS E1
	LEFT JOIN C2 AS E3 ON E1.[AD_Code] = E3.Sales_Unit_Code
)
, E1 AS (
	SELECT 
		ZD AS AD_CODE_FINAL,
		ZDName AS AD_NAME_FINAL,
		SUM(SUM_Y2_ACTUAL_PREM) AS SUM_Y2_ACTUAL_PREM,
		SUM(SUM_Y2_EXPECTED_PREM) AS SUM_Y2_EXPECTED_PREM
	FROM E
	WHERE ZD IS NOT NULL
	GROUP BY ZD, ZDName
	UNION
	SELECT 
		SZD AS AD_CODE_FINAL,
		SZDName AS AD_NAME_FINAL,
		SUM(SUM_Y2_ACTUAL_PREM) AS SUM_Y2_ACTUAL_PREM,
		SUM(SUM_Y2_EXPECTED_PREM) AS SUM_Y2_EXPECTED_PREM
	FROM E
	WHERE SZD IS NOT NULL
	GROUP BY SZD, SZDName
	UNION
	SELECT 
		RAD AS AD_CODE_FINAL,
		RADName AS AD_NAME_FINAL,
		SUM(SUM_Y2_ACTUAL_PREM) AS SUM_Y2_ACTUAL_PREM,
		SUM(SUM_Y2_EXPECTED_PREM) AS SUM_Y2_EXPECTED_PREM
	FROM E
	WHERE RAD IS NOT NULL
	GROUP BY RAD, RADName
	UNION
	SELECT 
		RD AS AD_CODE_FINAL,
		RDName AS AD_NAME_FINAL,
		SUM(SUM_Y2_ACTUAL_PREM) AS SUM_Y2_ACTUAL_PREM,
		SUM(SUM_Y2_EXPECTED_PREM) AS SUM_Y2_EXPECTED_PREM
	FROM E
	WHERE RD IS NOT NULL
	GROUP BY RD, RDName
	UNION
	SELECT 
		SRD AS AD_CODE_FINAL,
		SRDName AS AD_NAME_FINAL,
		SUM(SUM_Y2_ACTUAL_PREM) AS SUM_Y2_ACTUAL_PREM,
		SUM(SUM_Y2_EXPECTED_PREM) AS SUM_Y2_EXPECTED_PREM
	FROM E
	WHERE SRD IS NOT NULL
	GROUP BY SRD, SRDName
	UNION
	SELECT 
		TAD AS AD_CODE_FINAL,
		TADName AS AD_NAME_FINAL,
		SUM(SUM_Y2_ACTUAL_PREM) AS SUM_Y2_ACTUAL_PREM,
		SUM(SUM_Y2_EXPECTED_PREM) AS SUM_Y2_EXPECTED_PREM
	FROM E
	WHERE TAD IS NOT NULL
	GROUP BY TAD, TADName
	UNION
	SELECT 
		TD AS AD_CODE_FINAL,
		TDName AS AD_NAME_FINAL,
		SUM(SUM_Y2_ACTUAL_PREM) AS SUM_Y2_ACTUAL_PREM,
		SUM(SUM_Y2_EXPECTED_PREM) AS SUM_Y2_EXPECTED_PREM
	FROM E
	WHERE TD IS NOT NULL
	GROUP BY TD, TDName
)
, E2 AS (
	SELECT
		AD_CODE_FINAL,
		AD_NAME_FINAL,
		SUM(SUM_Y2_ACTUAL_PREM) AS SUM_PY2_ACTUAL_PREM,
		SUM(SUM_Y2_EXPECTED_PREM) AS SUM_PY2_EXPECTED_PREM
	FROM E1
	GROUP BY AD_CODE_FINAL, AD_NAME_FINAL
)
----FINAL
, F AS (
	SELECT
		F1.TERRITORY,
		F1.TD,
		F1.[TDName],
		F1.TAD,
		F1.[TADName],
		F1.[SRD],
		F1.[SRDName],
		F1.[RD],
		F1.[RDName],
		F1.[RAD],
		F1.[RADName],
		F1.[SZD],
		F1.[SZDName],
		F1.[AD_Code] AS [AD_CODE_FINAL],
		F1.[ADName],
		F1.[AD_Grade],
		F2.SUM_PY2_ACTUAL_PREM AS [SUM_ACTUAL_PREMIUM],
		F2.SUM_PY2_EXPECTED_PREM AS [SUM_EXPECTED_PREMIUM],
		(F2.SUM_PY2_ACTUAL_PREM/ NULLIF(F2.SUM_PY2_EXPECTED_PREM, 0)) AS [PY2_RATE],
		FORMAT(CAST(@varREPORT_MONTH AS date), 'yyyyMM') AS REPORT_MONTH
	FROM AD_STRUCTURE AS F1 LEFT JOIN E2 AS F2 ON F1.[AD_Code] = F2.AD_CODE_FINAL
)
----
	SELECT *
	FROM F
END;
GO


