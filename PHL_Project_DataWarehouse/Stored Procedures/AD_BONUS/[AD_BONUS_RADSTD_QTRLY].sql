USE [DP_Manh]
GO

/****** Object:  StoredProcedure [dbo].[AD_BONUS_RADSTD_QTRLY]    Script Date: 12/01/2023 13:59:32 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



ALTER PROCEDURE [dbo].[AD_BONUS_RADSTD_QTRLY] (@varREPORT_MONTH nvarchar(4000)) 
AS 
BEGIN
--@varREPORT_MONTH CHỌN THÁNG CUỐI QUÝ THEO TEMPLATE 'yyyy-MM-dd'. vd: '2022-09-01'
WITH
----PREPARE DATA
BONUS_PROBA AS (
	SELECT 
		[AD_Code], 
		[ADName], 
		[AD_Grade], 
		[Appointed_Date],
		[iDATE_APPOINTED],
		[iDATE_TARGET],
		[TGT_PROBA],
		[SUM_FYPincTopup_PROBA],
		[SUM_FYP_COUNT_BONUS_PROBA],
		[FYP_OVER_PROBA],
		[FYP_OVER_PROBA_DIV2],
		NO_OF_MTH_ADD,
		MTH_ADD_PROBA_BONUS
	FROM   
	   (SELECT * 
	   FROM [dbo].[T_AD_BONUS_PROBATION]) p  
	UNPIVOT  
	   (MTH_ADD_PROBA_BONUS FOR NO_OF_MTH_ADD IN   
		  ([MTH_ADDTO_1], [MTH_ADDTO_2])  
	)AS unpvt
)
, AD_STRUCTURE AS (
	SELECT 
		AD_STRUCTURE2.[TERRITORY],
		AD_STRUCTURE1.*
	FROM (SELECT *
		  FROM [SQL_SV65].[PowerBI].[DPO].[Main_AD_STRUCTURE_FULL]
		  WHERE [ExplodedDate]  = @varREPORT_MONTH) AS AD_STRUCTURE1
	LEFT JOIN [dbo].[T_Main_TERRITORIES] AS AD_STRUCTURE2
	ON AD_STRUCTURE1.[Territory_Code] = AD_STRUCTURE2.[CODE]
)
, AD_TARGET_FYP AS (
	SELECT [AD Code], [AD Name], unpvt.[Grade], YearTarget, CAST(MonthTarget AS INT) AS MonthTarget, TargetFYP
	FROM   (SELECT [AD Code], [AD Name], [Grade], [Year]  AS YearTarget
	, IIF([1] IS NULL, 0, [1]) AS [1]
	, IIF([2] IS NULL, 0, [2]) AS [2]
	, IIF([3] IS NULL, 0, [3]) AS [3]
	, IIF([4] IS NULL, 0, [4]) AS [4]
	, IIF([5] IS NULL, 0, [5]) AS [5]
	, IIF([6] IS NULL, 0, [6]) AS [6]
	, IIF([7] IS NULL, 0, [7]) AS [7]
	, IIF([8] IS NULL, 0, [8]) AS [8]
	, IIF([9] IS NULL, 0, [9]) AS [9]
	, IIF([10] IS NULL, 0, [10]) AS [10]
	, IIF([11] IS NULL, 0, [11]) AS [11]
	, IIF([12] IS NULL, 0, [12]) AS [12]
			FROM [SQL_SV64].[PowerBI].[DPO].[DP_AD_TARGET]
		) p UNPIVOT (TargetFYP FOR MonthTarget IN ([1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12])) AS unpvt
)
, DETAIL_FYP AS (
	SELECT *
	FROM [DP_Manh].[dbo].[T_AD_BONUS_DETAIL_FYP]
	WHERE REPORT_MONTH BETWEEN FORMAT(DATEADD(month, -2, @varREPORT_MONTH), 'yyyyMM')
	AND FORMAT(CAST(@varREPORT_MONTH AS date), 'yyyyMM')
)
, AD_BONUS_ZDSZD AS (
	SELECT
		TD,
		TAD,
		SRD,
		RD,
		RAD,
		AD_Code,
		BONUS_AA,
		REPORT_MONTH
	FROM [dbo].[T_AD_BONUS_ZDSZD_MTHLY]
	WHERE REPORT_MONTH BETWEEN FORMAT(DATEADD(month, -2, @varREPORT_MONTH), 'yyyyMM')
	AND FORMAT(CAST(@varREPORT_MONTH AS date), 'yyyyMM')
)
----FYP
, A AS (
	SELECT
		ZD AS AD_CODE_FINAL,
		REPORT_MONTH,
		SUM([FYPincTopup]) AS SUM_FYPincTopup,
		SUM([FYP_COUNT_BONUS]) AS SUM_FYP_COUNT_BONUS
	FROM DETAIL_FYP
	WHERE ZD IS NOT NULL
	GROUP BY ZD, REPORT_MONTH
	UNION
	SELECT
		SZD AS AD_CODE_FINAL,
		REPORT_MONTH,
		SUM([FYPincTopup]) AS SUM_FYPincTopup,
		SUM([FYP_COUNT_BONUS]) AS SUM_FYP_COUNT_BONUS
	FROM DETAIL_FYP
	WHERE SZD IS NOT NULL
	GROUP BY SZD, REPORT_MONTH
	UNION
	SELECT
		RAD AS AD_CODE_FINAL,
		REPORT_MONTH,
		SUM([FYPincTopup]) AS SUM_FYPincTopup,
		SUM([FYP_COUNT_BONUS]) AS SUM_FYP_COUNT_BONUS
	FROM DETAIL_FYP
	WHERE RAD IS NOT NULL
	GROUP BY RAD, REPORT_MONTH
	UNION
	SELECT
		RD AS AD_CODE_FINAL,
		REPORT_MONTH,
		SUM([FYPincTopup]) AS SUM_FYPincTopup,
		SUM([FYP_COUNT_BONUS]) AS SUM_FYP_COUNT_BONUS
	FROM DETAIL_FYP
	WHERE RD IS NOT NULL
	GROUP BY RD, REPORT_MONTH
	UNION
	SELECT
		SRD AS AD_CODE_FINAL,
		REPORT_MONTH,
		SUM([FYPincTopup]) AS SUM_FYPincTopup,
		SUM([FYP_COUNT_BONUS]) AS SUM_FYP_COUNT_BONUS
	FROM DETAIL_FYP
	WHERE SRD IS NOT NULL
	GROUP BY SRD, REPORT_MONTH
	UNION
	SELECT
		TAD AS AD_CODE_FINAL,
		REPORT_MONTH,
		SUM([FYPincTopup]) AS SUM_FYPincTopup,
		SUM([FYP_COUNT_BONUS]) AS SUM_FYP_COUNT_BONUS
	FROM DETAIL_FYP
	WHERE TAD IS NOT NULL
	GROUP BY TAD, REPORT_MONTH
	UNION
	SELECT
		TD AS AD_CODE_FINAL,
		REPORT_MONTH,
		SUM([FYPincTopup]) AS SUM_FYPincTopup,
		SUM([FYP_COUNT_BONUS]) AS SUM_FYP_COUNT_BONUS
	FROM DETAIL_FYP
	WHERE TD IS NOT NULL
	GROUP BY TD, REPORT_MONTH
)
, A1 AS (
	SELECT
		AD_CODE_FINAL,
		REPORT_MONTH,
		SUM(SUM_FYPincTopup) AS SUM_FYPincTopup,
		SUM(SUM_FYP_COUNT_BONUS) AS SUM_FYP_COUNT_BONUS
	FROM A
	GROUP BY AD_CODE_FINAL, REPORT_MONTH
)
, A2 AS (
	SELECT
		A21.[AD_Code],
		A21.[ADName],
		A21.[AD_Grade],
		A21.[Appointed_Date],
		CASE
			WHEN DAY(A21.[Appointed_Date]) > 15 
			THEN DATEFROMPARTS(YEAR(DATEADD(month, 1, A21.[Appointed_Date])), MONTH(DATEADD(month, 1, A21.[Appointed_Date])), 01)
			ELSE DATEFROMPARTS(YEAR(A21.[Appointed_Date]), MONTH(A21.[Appointed_Date]), 01)
		END AS iDATE_APPOINTED,
		A22.*
	FROM AD_STRUCTURE AS A21 LEFT JOIN AD_TARGET_FYP AS A22 
	ON A21.[AD_Code] = A22.[AD Code]
)
, A3 AS (
	SELECT 
		*,
		DATEADD(month, 2, iDATE_APPOINTED) AS iDATE_TARGET
	FROM A2
)
, A3X AS (
	SELECT
		[AD_Code],
		[ADName],
		[AD_Grade],
		[Appointed_Date],
		iDATE_APPOINTED,
		iDATE_TARGET,
		SUM(
			CASE 
			WHEN (YearTarget = YEAR(DATEADD(month, -1, iDATE_TARGET)) AND MonthTarget = MONTH(DATEADD(month, -1, iDATE_TARGET))) 
				OR (YearTarget = YEAR(DATEADD(month, -2, iDATE_TARGET)) AND MonthTarget = MONTH(DATEADD(month, -2, iDATE_TARGET)))
			THEN TargetFYP
			END
		) AS TGT_PROBA
	FROM A3
	GROUP BY [AD_Code], [ADName], [AD_Grade], [Appointed_Date], iDATE_APPOINTED, iDATE_TARGET
)
, A3Y AS (
	SELECT
		[AD_Code],
		[ADName],
		[AD_Grade],
		[Appointed_Date],
		iDATE_APPOINTED,
		iDATE_TARGET,
		CASE
			WHEN [AD_Grade] IN ('ZD', 'AZD') AND TGT_PROBA > 150 THEN iDATE_APPOINTED
			WHEN [AD_Grade] IN ('ZD', 'AZD') AND TGT_PROBA <= 150 THEN iDATE_TARGET
			WHEN [AD_Grade] IN ('SZD', 'ASZD') AND TGT_PROBA > 200 THEN iDATE_APPOINTED
			WHEN [AD_Grade] IN ('SZD', 'ASZD') AND TGT_PROBA <= 200 THEN iDATE_TARGET
			WHEN [AD_Grade] IN ('RAD', 'ARAD') AND TGT_PROBA > 250 THEN iDATE_APPOINTED
			WHEN [AD_Grade] IN ('RAD', 'ARAD') AND TGT_PROBA <= 250 THEN iDATE_TARGET
			WHEN [AD_Grade] IN ('RD', 'ARD') AND TGT_PROBA > 300 THEN iDATE_APPOINTED
			WHEN [AD_Grade] IN ('RD', 'ARD') AND TGT_PROBA <= 300 THEN iDATE_TARGET
			WHEN [AD_Grade] IN ('SRD', 'ASRD') AND TGT_PROBA > 500 THEN iDATE_APPOINTED
			WHEN [AD_Grade] IN ('SRD', 'ASRD') AND TGT_PROBA <= 500 THEN iDATE_TARGET
			WHEN [AD_Grade] IN ('TD', 'ATD','TAD', 'ATAD') THEN iDATE_APPOINTED
			ELSE iDATE_TARGET
		END AS iDATE_TARGET_REVISED
	FROM A3X
)
, A3Z AS (
	SELECT
		A3Y1.[AD_Code],
		A3Y1.[ADName],
		A3Y1.[AD_Grade],
		A3Y1.[Appointed_Date],
		A3Y1.iDATE_APPOINTED,
		A3Y1.iDATE_TARGET,
		FORMAT(A3Y1.iDATE_TARGET_REVISED, 'yyyyMM') AS iDATE_TARGET_REVISED,
		A3Y2.AD_CODE_FINAL,
		A3Y2.SUM_FYPincTopup,
		A3Y2.SUM_FYP_COUNT_BONUS,
		A3Y2.REPORT_MONTH
	FROM A3Y AS A3Y1 LEFT JOIN A1 AS A3Y2
	ON A3Y1.[AD_Code] = A3Y2.AD_CODE_FINAL
)
, A4 AS (
	SELECT
		[AD_Code],
		SUM(SUM_FYPincTopup) AS FYPincTopup_QUARTERLY,
		SUM(SUM_FYP_COUNT_BONUS) AS FYP_COUNT_BONUS_QUARTERLY
	FROM A3Z
	WHERE REPORT_MONTH >= iDATE_TARGET_REVISED
	GROUP BY [AD_Code]
)
--------ADD FYP OVER PROBA
, A5 AS (
	SELECT
		[AD_Code],
		SUM([FYP_OVER_PROBA_DIV2]) AS [FYP_OVER_PROBA_DIV2]
	FROM BONUS_PROBA
	WHERE MTH_ADD_PROBA_BONUS BETWEEN DATEADD(month, -2, @varREPORT_MONTH) AND @varREPORT_MONTH
	GROUP BY [AD_Code]
)
--------TARGET FYP
, A6 AS (
	SELECT
		*,
		DATEFROMPARTS(YearTarget, MonthTarget, 01) AS TARGET_MONTH
	FROM AD_TARGET_FYP
)
, A7 AS (
	SELECT
		[AD Code],
		SUM((TargetFYP * 1000000)) AS TargetFYP_QTRLY
	FROM A6
	WHERE TARGET_MONTH BETWEEN DATEADD(month, -2, @varREPORT_MONTH) AND @varREPORT_MONTH
	GROUP BY [AD Code]
)
----AA BONUS FROM ZDSZD
, B AS (
	SELECT
		TD,
		TAD,
		SRD,
		RD,
		RAD,
		AD_Code,
		SUM(BONUS_AA) AS BONUS_AA_IN_QTR
	FROM AD_BONUS_ZDSZD
	GROUP BY TD, TAD, SRD, RD, RAD, AD_Code
)
, B1 AS (
	SELECT
		RAD AS AD_CODE_FINAL,
		SUM(BONUS_AA_IN_QTR) AS SUM_BONUS_AA_IN_QTR
	FROM B
	WHERE RAD IS NOT NULL
	GROUP BY RAD
	UNION
	SELECT
		RD AS AD_CODE_FINAL,
		SUM(BONUS_AA_IN_QTR) AS SUM_BONUS_AA_IN_QTR
	FROM B
	WHERE RD IS NOT NULL
	GROUP BY RD
	UNION
	SELECT
		SRD AS AD_CODE_FINAL,
		SUM(BONUS_AA_IN_QTR) AS SUM_BONUS_AA_IN_QTR
	FROM B
	WHERE SRD IS NOT NULL
	GROUP BY SRD
	UNION
	SELECT
		TAD AS AD_CODE_FINAL,
		SUM(BONUS_AA_IN_QTR) AS SUM_BONUS_AA_IN_QTR
	FROM B
	WHERE TAD IS NOT NULL
	GROUP BY TAD
	UNION
	SELECT
		TD AS AD_CODE_FINAL,
		SUM(BONUS_AA_IN_QTR) AS SUM_BONUS_AA_IN_QTR
	FROM B
	WHERE TD IS NOT NULL
	GROUP BY TD
)
, B2 AS (
	SELECT
		AD_CODE_FINAL,
		SUM(SUM_BONUS_AA_IN_QTR) AS SUM_BONUS_AA_IN_QTR
	FROM B1
	GROUP BY AD_CODE_FINAL
)
----COMBINE RESULT
, C AS (
	SELECT
		C01.[TERRITORY],
		C01.[TDName],
		C01.[TADName],
		C01.[SRDName],
		C01.[RDName],
		C01.[RADName],
		C01.[AD_Code],
		C01.[ADName],
		C01.[AD_Grade],
		C01.[Appointed_Date],
		C01.[Terminated_Date],
		IIF(C04.TargetFYP_QTRLY IS NULL, 0, C04.TargetFYP_QTRLY) AS TargetFYP_QTRLY,
		IIF(C02.FYP_COUNT_BONUS_QUARTERLY IS NULL, 0, C02.FYP_COUNT_BONUS_QUARTERLY) AS FYP_COUNT_BONUS_QUARTERLY,
		IIF(C03.FYP_OVER_PROBA_DIV2 IS NULL, 0, C03.FYP_OVER_PROBA_DIV2) AS FYP_OVER_PROBA_DIV2,
		IIF(C05.SUM_BONUS_AA_IN_QTR IS NULL, 0, C05.SUM_BONUS_AA_IN_QTR) AS SUM_BONUS_AA_IN_QTR,
		C01.[TD],
		C01.[TAD],
		C01.[SRD],
		C01.[RD],
		C01.[RAD]
	FROM AD_STRUCTURE AS C01 LEFT JOIN A4 AS C02 ON C01.[AD_Code] = C02.[AD_Code]
	LEFT JOIN A5 AS C03 ON C01.[AD_Code] = C03.AD_Code
	LEFT JOIN A7 AS C04 ON C01.[AD_Code] = C04.[AD Code]
	LEFT JOIN B2 AS C05 ON C01.[AD_Code] = C05.AD_CODE_FINAL
	WHERE C01.[AD_Grade] IN ('RAD', 'RD', 'SRD', 'TAD', 'TD', 'STD')
	AND (C01.[Terminated_Date] IS NULL OR C01.[Terminated_Date] > EOMONTH(@varREPORT_MONTH))
)
, C2 AS (
	SELECT
		[TERRITORY],
		[TDName],
		[TADName],
		[SRDName],
		[RDName],
		[RADName],
		[AD_Code],
		[ADName],
		[AD_Grade],
		TargetFYP_QTRLY,
		FYP_COUNT_BONUS_QUARTERLY,
		FYP_OVER_PROBA_DIV2,
		(FYP_COUNT_BONUS_QUARTERLY + FYP_OVER_PROBA_DIV2) AS TOTAL_FYP,
		((FYP_COUNT_BONUS_QUARTERLY + FYP_OVER_PROBA_DIV2) / NULLIF(TargetFYP_QTRLY, 0)) AS ACHIEVE_TGT_FYP_QTRLY,
		SUM_BONUS_AA_IN_QTR,
		[TD],
		[TAD],
		[SRD],
		[RD],
		[RAD]
	FROM C
)
, C3 AS (
	SELECT
		[TERRITORY],
		[TDName],
		[TADName],
		[SRDName],
		[RDName],
		[RADName],
		[AD_Code],
		[ADName],
		[AD_Grade],
		TargetFYP_QTRLY,
		FYP_COUNT_BONUS_QUARTERLY,
		FYP_OVER_PROBA_DIV2,
		TOTAL_FYP,
		ROUND(ACHIEVE_TGT_FYP_QTRLY, 4) AS ACHIEVE_TGT_FYP_QTRLY,
		CASE
			WHEN [AD_Grade] IN ('RAD', 'RD', 'SRD') AND ACHIEVE_TGT_FYP_QTRLY >= 1.75 THEN 0.025
			WHEN [AD_Grade] IN ('RAD', 'RD', 'SRD') AND ACHIEVE_TGT_FYP_QTRLY >= 1.25 THEN 0.02
			WHEN [AD_Grade] IN ('RAD', 'RD', 'SRD') AND ACHIEVE_TGT_FYP_QTRLY >= 1 THEN 0.016
			WHEN [AD_Grade] IN ('RAD', 'RD', 'SRD') AND ACHIEVE_TGT_FYP_QTRLY >= 0.8 THEN 0.008
			WHEN [AD_Grade] IN ('TAD', 'TD', 'STD') AND ACHIEVE_TGT_FYP_QTRLY >= 1.5 THEN 0.02
			WHEN [AD_Grade] IN ('TAD', 'TD', 'STD') AND ACHIEVE_TGT_FYP_QTRLY >= 1.25 THEN 0.0175
			WHEN [AD_Grade] IN ('TAD', 'TD', 'STD') AND ACHIEVE_TGT_FYP_QTRLY >= 1 THEN 0.014
			WHEN [AD_Grade] IN ('TAD', 'TD', 'STD') AND ACHIEVE_TGT_FYP_QTRLY >= 0.8 THEN 0.0075
			ELSE 0
		END AS BONUS_FYP_RATIO,
		SUM_BONUS_AA_IN_QTR,
		CASE
			WHEN [AD_Grade] IN ('RAD') THEN 0.2
			WHEN [AD_Grade] IN ('RD') THEN 0.16
			WHEN [AD_Grade] IN ('SRD') THEN 0.12
			WHEN [AD_Grade] IN ('TAD') THEN 0.09
			WHEN [AD_Grade] IN ('TD') THEN 0.07
			WHEN [AD_Grade] IN ('STD') THEN 0.06
			ELSE 0
		END AS BONUS_AA_RATIO,
		[TD],
		[TAD],
		[SRD],
		[RD],
		[RAD]
	FROM C2
)
, C4 AS (
	SELECT
		[TERRITORY],
		[TDName],
		[TADName],
		[SRDName],
		[RDName],
		[RADName],
		[AD_Code],
		[ADName],
		[AD_Grade],
		TargetFYP_QTRLY,
		FYP_COUNT_BONUS_QUARTERLY,
		FYP_OVER_PROBA_DIV2,
		TOTAL_FYP,
		ACHIEVE_TGT_FYP_QTRLY,
		BONUS_FYP_RATIO,
		(TOTAL_FYP * BONUS_FYP_RATIO) AS BONUS_FYP,
		SUM_BONUS_AA_IN_QTR,
		BONUS_AA_RATIO,
		(SUM_BONUS_AA_IN_QTR * BONUS_AA_RATIO) AS BONUS_AA,
		[TD],
		[TAD],
		[SRD],
		[RD],
		[RAD],
		(FORMAT(DATEADD(month, -2, @varREPORT_MONTH), 'yyyyMM') + '-' +
		FORMAT(CAST(@varREPORT_MONTH AS date), 'yyyyMM')) AS REPORT_MONTH
	FROM C3
)
----FINAL
	SELECT 
		*
	FROM C4
END;
GO


