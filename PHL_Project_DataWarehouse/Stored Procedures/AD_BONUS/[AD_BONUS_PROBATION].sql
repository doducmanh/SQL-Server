USE [DP_Manh]
GO

/****** Object:  StoredProcedure [dbo].[AD_BONUS_PROBATION]    Script Date: 26/09/2022 09:10:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




ALTER PROCEDURE [dbo].[AD_BONUS_PROBATION] (@varREPORT_MONTH nvarchar(4000))
AS 
BEGIN
--@varREPORT_MONTH format 'yyyy-MM-01'
WITH 
AD_STRUCTURE AS (
	SELECT 
		AD_STRUCTURE2.[TERRITORY],
		AD_STRUCTURE1.*
	FROM (SELECT *
		  FROM [SQL_SV65].[PowerBI].[DPO].[Main_AD_STRUCTURE_FULL]
		  WHERE [ExplodedDate]  = @varREPORT_MONTH) AS AD_STRUCTURE1
	LEFT JOIN [dbo].[T_Main_TERRITORIES] AS AD_STRUCTURE2
	ON AD_STRUCTURE1.[Territory_Code] = AD_STRUCTURE2.[CODE]
)
, AD_TARGET_FYP AS (
	SELECT [AD Code], [AD Name], unpvt.[Grade], YearTarget, CAST(MonthTarget AS INT) AS MonthTarget, TargetFYP
	FROM   (SELECT [AD Code], [AD Name], [Grade], [Year]  AS YearTarget
	, IIF([1] IS NULL, 0, [1]) AS [1]
	, IIF([2] IS NULL, 0, [2]) AS [2]
	, IIF([3] IS NULL, 0, [3]) AS [3]
	, IIF([4] IS NULL, 0, [4]) AS [4]
	, IIF([5] IS NULL, 0, [5]) AS [5]
	, IIF([6] IS NULL, 0, [6]) AS [6]
	, IIF([7] IS NULL, 0, [7]) AS [7]
	, IIF([8] IS NULL, 0, [8]) AS [8]
	, IIF([9] IS NULL, 0, [9]) AS [9]
	, IIF([10] IS NULL, 0, [10]) AS [10]
	, IIF([11] IS NULL, 0, [11]) AS [11]
	, IIF([12] IS NULL, 0, [12]) AS [12]
			FROM [SQL_SV64].[PowerBI].[DPO].[DP_AD_TARGET]
		) p UNPIVOT (TargetFYP FOR MonthTarget IN ([1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12])) AS unpvt
)
, DETAIL_FYP AS (
	SELECT *
	FROM [DP_Manh].[dbo].[T_AD_BONUS_DETAIL_FYP]
)
--TARGET IN PROBATION
, A0 AS (
	SELECT
		A01.[AD_Code],
		A01.[ADName],
		A01.[AD_Grade],
		A01.[Appointed_Date],
		CASE
			WHEN DAY(A01.[Appointed_Date]) > 15 
			THEN DATEFROMPARTS(YEAR(DATEADD(month, 1, A01.[Appointed_Date])), MONTH(DATEADD(month, 1, A01.[Appointed_Date])), 01)
			ELSE DATEFROMPARTS(YEAR(A01.[Appointed_Date]), MONTH(A01.[Appointed_Date]), 01)
		END AS iDATE_APPOINTED,
		A02.*
	FROM AD_STRUCTURE AS A01 LEFT JOIN AD_TARGET_FYP AS A02
	ON A01.[AD_Code] = A02.[AD Code]
)
, A1 AS (
	SELECT 
		*,
		DATEADD(month, 2, iDATE_APPOINTED) AS iDATE_TARGET
	FROM A0
	WHERE DATEADD(month, 2, iDATE_APPOINTED) = @varREPORT_MONTH
)
, A2 AS (
	SELECT
		[AD_Code],
		[ADName],
		[AD_Grade],
		[Appointed_Date],
		iDATE_APPOINTED,
		iDATE_TARGET,
		SUM(
			CASE 
			WHEN (YearTarget = YEAR(DATEADD(month, -1, iDATE_TARGET)) AND MonthTarget = MONTH(DATEADD(month, -1, iDATE_TARGET))) 
				OR (YearTarget = YEAR(DATEADD(month, -2, iDATE_TARGET)) AND MonthTarget = MONTH(DATEADD(month, -2, iDATE_TARGET)))
			THEN TargetFYP
			END
		) AS TGT_PROBA
	FROM A1
	GROUP BY [AD_Code], [ADName], [AD_Grade], [Appointed_Date], iDATE_APPOINTED, iDATE_TARGET
)
, A3 AS (
	SELECT
		[AD_Code],
		[ADName],
		[AD_Grade],
		[Appointed_Date],
		iDATE_APPOINTED,
		iDATE_TARGET,
		CASE
			WHEN [AD_Grade] IN ('ZD', 'AZD') AND TGT_PROBA > 150 THEN NULL
			WHEN [AD_Grade] IN ('ZD', 'AZD') AND TGT_PROBA <= 150 THEN 150000000
			WHEN [AD_Grade] IN ('SZD', 'ASZD') AND TGT_PROBA > 200 THEN NULL
			WHEN [AD_Grade] IN ('SZD', 'ASZD') AND TGT_PROBA <= 200 THEN 200000000
			WHEN [AD_Grade] IN ('RAD', 'ARAD') AND TGT_PROBA > 250 THEN NULL
			WHEN [AD_Grade] IN ('RAD', 'ARAD') AND TGT_PROBA <= 250 THEN 250000000
			WHEN [AD_Grade] IN ('RD', 'ARD') AND TGT_PROBA > 300 THEN NULL
			WHEN [AD_Grade] IN ('RD', 'ARD') AND TGT_PROBA <= 300 THEN 300000000
			WHEN [AD_Grade] IN ('SRD', 'ASRD') AND TGT_PROBA > 500 THEN NULL
			WHEN [AD_Grade] IN ('SRD', 'ASRD') AND TGT_PROBA <= 500 THEN 500000000
		END AS TGT_PROBA
	FROM A2
)
-- FYP IN PROBATION
, B0 AS (
	SELECT
		ZD AS AD_CODE_FINAL,
		SUM([FYPincTopup]) AS SUM_FYPincTopup_PROBA,
		SUM([FYP_COUNT_BONUS]) AS SUM_FYP_COUNT_BONUS_PROBA
	FROM DETAIL_FYP
	WHERE ZD IS NOT NULL
	AND  (REPORT_MONTH = FORMAT(DATEADD(month, -1, @varREPORT_MONTH), 'yyyyMM') 
		OR REPORT_MONTH = FORMAT(DATEADD(month, -2, @varREPORT_MONTH), 'yyyyMM')
		OR REPORT_MONTH = FORMAT(DATEADD(month, -3, @varREPORT_MONTH), 'yyyyMM'))
	GROUP BY ZD
	UNION
	SELECT
		SZD AS AD_CODE_FINAL,
		SUM([FYPincTopup]) AS SUM_FYPincTopup_PROBA,
		SUM([FYP_COUNT_BONUS]) AS SUM_FYP_COUNT_BONUS_PROBA
	FROM DETAIL_FYP
	WHERE SZD IS NOT NULL
	AND  (REPORT_MONTH = FORMAT(DATEADD(month, -1, @varREPORT_MONTH), 'yyyyMM') 
		OR REPORT_MONTH = FORMAT(DATEADD(month, -2, @varREPORT_MONTH), 'yyyyMM')
		OR REPORT_MONTH = FORMAT(DATEADD(month, -3, @varREPORT_MONTH), 'yyyyMM'))
	GROUP BY SZD
	UNION
	SELECT
		RAD AS AD_CODE_FINAL,
		SUM([FYPincTopup]) AS SUM_FYPincTopup_PROBA,
		SUM([FYP_COUNT_BONUS]) AS SUM_FYP_COUNT_BONUS_PROBA
	FROM DETAIL_FYP
	WHERE RAD IS NOT NULL
	AND  (REPORT_MONTH = FORMAT(DATEADD(month, -1, @varREPORT_MONTH), 'yyyyMM') 
		OR REPORT_MONTH = FORMAT(DATEADD(month, -2, @varREPORT_MONTH), 'yyyyMM')
		OR REPORT_MONTH = FORMAT(DATEADD(month, -3, @varREPORT_MONTH), 'yyyyMM'))
	GROUP BY RAD
	UNION
	SELECT
		RD AS AD_CODE_FINAL,
		SUM([FYPincTopup]) AS SUM_FYPincTopup_PROBA,
		SUM([FYP_COUNT_BONUS]) AS SUM_FYP_COUNT_BONUS_PROBA
	FROM DETAIL_FYP
	WHERE RD IS NOT NULL
	AND  (REPORT_MONTH = FORMAT(DATEADD(month, -1, @varREPORT_MONTH), 'yyyyMM') 
		OR REPORT_MONTH = FORMAT(DATEADD(month, -2, @varREPORT_MONTH), 'yyyyMM')
		OR REPORT_MONTH = FORMAT(DATEADD(month, -3, @varREPORT_MONTH), 'yyyyMM'))
	GROUP BY RD
	UNION
	SELECT
		SRD AS AD_CODE_FINAL,
		SUM([FYPincTopup]) AS SUM_FYPincTopup_PROBA,
		SUM([FYP_COUNT_BONUS]) AS SUM_FYP_COUNT_BONUS_PROBA
	FROM DETAIL_FYP
	WHERE SRD IS NOT NULL
	AND  (REPORT_MONTH = FORMAT(DATEADD(month, -1, @varREPORT_MONTH), 'yyyyMM') 
		OR REPORT_MONTH = FORMAT(DATEADD(month, -2, @varREPORT_MONTH), 'yyyyMM')
		OR REPORT_MONTH = FORMAT(DATEADD(month, -3, @varREPORT_MONTH), 'yyyyMM'))
	GROUP BY SRD
	UNION
	SELECT
		TD AS AD_CODE_FINAL,
		SUM([FYPincTopup]) AS SUM_FYPincTopup_PROBA,
		SUM([FYP_COUNT_BONUS]) AS SUM_FYP_COUNT_BONUS_PROBA
	FROM DETAIL_FYP
	WHERE TD IS NOT NULL
	AND  (REPORT_MONTH = FORMAT(DATEADD(month, -1, @varREPORT_MONTH), 'yyyyMM') 
		OR REPORT_MONTH = FORMAT(DATEADD(month, -2, @varREPORT_MONTH), 'yyyyMM')
		OR REPORT_MONTH = FORMAT(DATEADD(month, -3, @varREPORT_MONTH), 'yyyyMM'))
	GROUP BY TD
)
, B1 AS (
	SELECT
		AD_CODE_FINAL,
		SUM(SUM_FYPincTopup_PROBA) AS SUM_FYPincTopup_PROBA,
		SUM(SUM_FYP_COUNT_BONUS_PROBA) AS SUM_FYP_COUNT_BONUS_PROBA
	FROM B0
	GROUP BY AD_CODE_FINAL
)
, B2 AS (
	SELECT
		B21.[AD_Code],
		B21.[ADName],
		B21.[AD_Grade],
		B21.[Appointed_Date],
		B21.iDATE_APPOINTED,
		B21.iDATE_TARGET,
		B21.TGT_PROBA,
		B22.SUM_FYPincTopup_PROBA,
		B22.SUM_FYP_COUNT_BONUS_PROBA,
		(B22.SUM_FYP_COUNT_BONUS_PROBA - B21.TGT_PROBA) AS FYP_OVER_PROBA,
		((B22.SUM_FYP_COUNT_BONUS_PROBA - B21.TGT_PROBA)/ 2)AS FYP_OVER_PROBA_DIV2,
		B21.iDATE_TARGET AS MTH_ADDTO_1,
		DATEADD(month, 1, B21.iDATE_TARGET) AS MTH_ADDTO_2,
		FORMAT(CAST(@varREPORT_MONTH AS date), 'yyyyMM') AS REPORT_MONTH
	FROM A3 AS B21 LEFT JOIN B1 AS B22
	ON B21.[AD_Code] = B22.AD_CODE_FINAL
	WHERE (B22.SUM_FYP_COUNT_BONUS_PROBA - B21.TGT_PROBA) > 0
)
---FINAL	
	SELECT * FROM B2
END;
GO


